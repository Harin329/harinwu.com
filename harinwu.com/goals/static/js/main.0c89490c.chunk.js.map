{"version":3,"sources":["assets/Lifed","services/firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","GoalTree","id","value","complete","this","descendents","parent","done","node","newChildren","child","push","newID","length","g","App","useState","selection","setSelection","drilldown","setDrilldown","modalOpen","setModal","password","setPassword","update","setUpdate","showAll","setAll","timeline","a","signInWithEmailAndPassword","then","console","log","catch","error","message","selectDrilldown","newHead","newDrill","x","undefined","hasChild","children","newName","treeID","nc","newChild","collection","doc","set","Head","Children","Goal","Done","merge","get","parentNode","ref","FieldValue","arrayUnion","editNode","nodeDone","deleteID","oldDoc","deleteDocs","backDelete","parentDoc","arrayRemove","delete","useEffect","addChildren","drill","select","currentLevel","nextList","nextA","subResult","fillChildren","where","result","tier","docs","bigGoal","childList","nextFill","e","className","style","textAlign","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","onChange","event","target","fullWidth","DialogActions","Button","onClick","login","color","Container","fluid","src","require","alt","width","variant","position","right","top","backgroundColor","onPointerUp","currentUser","IconButton","aria-label","newTree","uuidv4","uploadHead","ButtonGroup","marginBottom","height","fontSize","fontWeight","map","valueTop","indexTop","key","Row","Typography","index","parentDone","Col","String","Card","CardContent","multiline","rowsMax","stopPropagation","defaultValue","goal","CardActions","justifyContent","deleteMe","d","parseInt","newTier","removeChild","deleteNode","len","uploadNode","disabled","_","fromSelector","fromOffsetY","toSelector","toOffsetY","middleX","zIndex","dynamicUpdate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c89490c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Lifed.fa00553c.bin\";","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCH2qdNs7OtTDSwaHCdpM2lsjYKxrCe_dg\",\n  authDomain: \"life-hao.firebaseapp.com\",\n  databaseURL: \"https://life-hao.firebaseio.com\",\n  projectId: \"life-hao\",\n  storageBucket: \"life-hao.appspot.com\",\n  messagingSenderId: \"288698402362\",\n  appId: \"1:288698402362:web:943a4c0acdeaf1efb7d703\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const db = firebase.firestore();\nexport const firestore = firebase.firestore;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CurvedArrow from \"react-curved-arrow\";\nimport { db, firestore, auth } from \"./services/firebase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass GoalTree {\n  constructor(id, value, complete) {\n    this.value = value;\n    this.descendents = [];\n    this.parent = null;\n    this.id = id;\n    this.done = complete;\n  }\n\n  flip() {\n    this.done = !this.done;\n  }\n\n  get treeID() {\n    return this.id;\n  }\n\n  set treeID(newID) {\n    this.id = newID;\n  }\n\n  get children() {\n    return this.descendents;\n  }\n\n  set children(node) {\n    this.descendents.push(node);\n    if (node) {\n      node.parent = this;\n    }\n  }\n\n  get hasChild() {\n    return this.descendents.length !== 0;\n  }\n\n  set goal(g) {\n    this.value = g;\n  }\n\n  get goal() {\n    return this.value;\n  }\n\n  removeChild(node) {\n    var newChildren = [];\n    for (const child of this.descendents) {\n      if (child !== node) {\n        newChildren.push(child);\n      }\n    }\n    this.descendents = newChildren;\n  }\n}\n\nfunction App() {\n  const [selection, setSelection] = useState([]);\n  const [drilldown, setDrilldown] = useState([]);\n  const [modalOpen, setModal] = useState(false);\n  const [password, setPassword] = useState();\n  const [update, setUpdate] = useState(true);\n  const [showAll, setAll] = useState(false);\n\n  const timeline = [\n    \"Life\",\n    \"10 Year\",\n    \"Annual\",\n    \"Quarter\",\n    \"Monthly\",\n    \"Weekly\",\n  ];\n\n  async function login(password) {\n    try {\n      await auth\n        .signInWithEmailAndPassword(\"master.harin@gmail.com\", password)\n        .then(() => {\n          console.log(\"User logged in!\");\n          setModal(false);\n        })\n        .catch(() => {\n          console.log(\"Incorrect\");\n          setModal(false);\n        });\n    } catch (e) {\n      console.error(e.message);\n      setModal(false);\n    }\n  }\n\n  function parentDone(node) {\n    if (node.parent === null) {\n      return false;\n    } else {\n      if (node.done) {\n        return true;\n      } else {\n        return parentDone(node.parent);\n      }\n    }\n  }\n\n  function selectDrilldown(newHead) {\n    var newDrill = [];\n    var x = 0;\n    var parent = null;\n    if (newHead.length === 0) {\n      parent = drilldown[x][selection[x]];\n      newDrill.push(drilldown[x]);\n    } else {\n      parent = newHead[selection[x]];\n      newDrill.push(newHead);\n    }\n    while (parent !== undefined && parent.hasChild) {\n      x += 1;\n      newDrill.push(parent.children);\n      parent = parent.children[selection[x]];\n    }\n    setDrilldown(newDrill);\n  }\n\n  async function uploadHead(node) {\n    const newName = node.value;\n    const newID = node.treeID;\n    const nc = node.children;\n    var newChild = [];\n    for (const child of nc) {\n      newChild.push(child.treeID);\n    }\n\n    try {\n      await db\n        .collection(\"Goals\")\n        .doc(newID)\n        .set(\n          {\n            Head: true,\n            Children: newChild,\n            Goal: newName,\n            Done: false,\n          },\n          { merge: true }\n        )\n        .then(() => {\n          //New Life Goal\n        });\n    } catch (e) {\n      console.error(e.message);\n    }\n  }\n\n  async function uploadNode(node) {\n    const newName = node.value;\n    const newID = node.treeID;\n    const parent = node.parent;\n    const nc = node.children;\n    var newChild = [];\n    for (const child of nc) {\n      newChild.push(child.treeID);\n    }\n\n    try {\n      await db\n        .collection(\"Goals\")\n        .doc(newID)\n        .set(\n          {\n            Head: false,\n            Children: newChild,\n            Goal: newName,\n            Done: false,\n          },\n          { merge: true }\n        )\n        .then(() => {\n          if (parent !== null) {\n            db.collection(\"Goals\")\n              .doc(parent.treeID)\n              .get()\n              .then((parentNode) => {\n                parentNode.ref.update({\n                  Children: firestore.FieldValue.arrayUnion(newID),\n                });\n              });\n          }\n        });\n    } catch (e) {\n      console.error(e.message);\n    }\n  }\n\n  async function editNode(node) {\n    const newName = node.value;\n    const newID = node.treeID;\n    const parent = node.parent;\n    const nc = node.children;\n    var newChild = [];\n    for (const child of nc) {\n      newChild.push(child.treeID);\n    }\n    const nodeDone = node.done;\n\n    try {\n      await db\n        .collection(\"Goals\")\n        .doc(newID)\n        .set(\n          {\n            Children: newChild,\n            Goal: newName,\n            Done: nodeDone,\n          },\n          { merge: true }\n        )\n        .then(() => {\n          if (parent !== null) {\n            db.collection(\"Goals\")\n              .doc(parent.treeID)\n              .get()\n              .then((parentNode) => {\n                parentNode.ref.update({\n                  Children: firestore.FieldValue.arrayUnion(newID),\n                });\n              });\n          }\n        });\n    } catch (e) {\n      console.error(e.message);\n    }\n  }\n\n  async function deleteNode(node) {\n    const deleteID = node.treeID;\n    const parent = node.parent;\n\n    try {\n      await db\n        .collection(\"Goals\")\n        .doc(deleteID)\n        .get()\n        .then((oldDoc) => {\n          const deleteDocs = oldDoc.get(\"Children\");\n          for (const child of deleteDocs) {\n            backDelete(child);\n          }\n          if (parent !== null) {\n            db.collection(\"Goals\")\n              .doc(parent.treeID)\n              .get()\n              .then((parentDoc) => {\n                parentDoc.ref.update({\n                  Children: firestore.FieldValue.arrayRemove(deleteID),\n                });\n              });\n          }\n          oldDoc.ref.delete();\n        });\n    } catch (e) {\n      console.error(e.message);\n    }\n  }\n\n  async function backDelete(id) {\n    try {\n      await db\n        .collection(\"Goals\")\n        .doc(id)\n        .get()\n        .then((oldDoc) => {\n          const deleteDocs = oldDoc.get(\"Children\");\n          for (const child of deleteDocs) {\n            backDelete(child);\n          }\n          oldDoc.ref.delete();\n        });\n    } catch (e) {\n      console.error(e.message);\n    }\n  }\n\n  useEffect(() => {\n    async function addChildren(parent, children, drill, select) {\n      try {\n        var currentLevel = [];\n        var nextList = [];\n        var nextA = null;\n        for (const child of children) {\n          await db\n            .collection(\"Goals\")\n            .doc(child)\n            .get()\n            .then((subResult) => {\n              const a = new GoalTree(\n                subResult.id,\n                subResult.get(\"Goal\"),\n                subResult.get(\"Done\")\n              );\n              currentLevel.push(a);\n              parent.children = a;\n\n              if (currentLevel.length <= 1) {\n                nextList = subResult.get(\"Children\");\n                nextA = a;\n              } else {\n                const nextFill = subResult.get(\"Children\");\n                fillChildren(a, nextFill);\n              }\n\n              if (currentLevel.length === children.length) {\n                drill.push(currentLevel);\n                select.push(0);\n                if (nextList.length !== 0) {\n                  addChildren(nextA, nextList, drill, select);\n                } else {\n                  setDrilldown(drill);\n                  setSelection(select);\n                }\n              }\n            });\n        }\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n\n    async function fillChildren(parent, children) {\n      try {\n        for (const child of children) {\n          await db\n            .collection(\"Goals\")\n            .doc(child)\n            .get()\n            .then((subResult) => {\n              const a = new GoalTree(\n                subResult.id,\n                subResult.get(\"Goal\"),\n                subResult.get(\"Done\")\n              );\n              parent.children = a;\n\n              const nextFill = subResult.get(\"Children\");\n              fillChildren(a, nextFill);\n            });\n        }\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n\n    (async () => {\n      try {\n        await db\n          .collection(\"Goals\")\n          .where(\"Head\", \"==\", true)\n          .get()\n          .then((result) => {\n            var tier = [];\n            for (const bigGoal of result.docs) {\n              const a = new GoalTree(\n                bigGoal.id,\n                bigGoal.get(\"Goal\"),\n                bigGoal.get(\"Done\")\n              );\n              tier.push(a);\n            }\n            var drill = [tier];\n            var select = [0];\n\n            var x = 0;\n            for (const bigGoal of result.docs) {\n              if (bigGoal.id === result.docs[0].id) {\n                var childList = bigGoal.get(\"Children\");\n                if (childList.length !== 0) {\n                  addChildren(tier[0], childList, drill, select);\n                } else {\n                  setDrilldown(drill);\n                  setSelection(select);\n                }\n              } else {\n                const nextFill = bigGoal.get(\"Children\");\n                fillChildren(tier[x], nextFill);\n              }\n              x += 1;\n            }\n          })\n          .catch((e) => console.log(e));\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        textAlign: \"center\",\n      }}\n    >\n      <Dialog\n        open={modalOpen}\n        onClose={() => {\n          setModal(false);\n        }}\n      >\n        <DialogTitle>Login</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Enter password for the board!</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              login(password);\n            }}\n            color=\"primary\"\n          >\n            Log In\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Container\n        fluid\n        style={{\n          textAlign: \"center\",\n        }}\n      >\n        <img\n          src={require(\"./assets/Lifed\")}\n          alt=\"Lifed\"\n          style={{ width: 200 }}\n        />\n      </Container>\n      <Button\n        variant=\"contained\"\n        style={{\n          position: \"absolute\",\n          right: 10,\n          top: 50,\n          backgroundColor: \"white\",\n          color: \"black\",\n        }}\n        onPointerUp={() => {\n          setModal(true);\n        }}\n      >\n        Edit\n      </Button>\n      {auth.currentUser && (\n        <IconButton\n          aria-label=\"Add Goal\"\n          onPointerUp={() => {\n            const newTree = new GoalTree(uuidv4(), \"New\", false);\n            drilldown[0].push(newTree);\n            setDrilldown(drilldown);\n            setUpdate(!update);\n            uploadHead(newTree);\n          }}\n          style={{\n            position: \"absolute\",\n            right: 100,\n            top: 45,\n            color: \"#ffffff\",\n          }}\n        >\n          <AddIcon />\n        </IconButton>\n      )}\n      <ButtonGroup variant=\"contained\" style={{ marginBottom: 50 }}>\n        <Button\n          style={{\n            height: 40,\n            width: 300,\n            fontSize: 15,\n            fontWeight: \"bold\",\n            color: \"#000000\",\n            backgroundColor: \"white\",\n          }}\n          onClick={() => {\n            setAll(false);\n          }}\n        >\n          Active Goals\n        </Button>\n        <Button\n          style={{\n            height: 40,\n            width: 300,\n            fontSize: 15,\n            fontWeight: \"bold\",\n            color: \"#000000\",\n            backgroundColor: \"white\",\n          }}\n          onClick={() => {\n            setAll(true);\n          }}\n        >\n          All Goals\n        </Button>\n      </ButtonGroup>\n      <Container>\n        {drilldown !== undefined &&\n          drilldown.length !== 0 &&\n          drilldown.map((valueTop, indexTop) => {\n            return (\n              <Container\n                style={{\n                  marginBottom: 80,\n                }}\n                key={indexTop}\n              >\n                <Row>\n                  <Typography\n                    color=\"textSecondary\"\n                    style={{ fontSize: 20, color: \"white\" }}\n                  >\n                    {indexTop <= 6 ? timeline[indexTop] : \"Daily\"}\n                  </Typography>\n                </Row>\n                <Row>\n                  {valueTop.map((value, index) => {\n                    if (showAll || (!value.done && !parentDone(value))) {\n                      return (\n                        <Col key={String(value.value) + String(index)}>\n                          <Card\n                            className={\n                              selection[indexTop] === index\n                                ? \"t\" + String(indexTop)\n                                : \"t\"\n                            }\n                            style={{\n                              height: 150,\n                              width: 300,\n                              margin: 10,\n                              backgroundColor:\n                                selection[indexTop] === index\n                                  ? \"#ffa500\"\n                                  : \"#ffffff\",\n                            }}\n                            onPointerUp={() => {\n                              selection[indexTop] = index;\n                              setSelection(selection);\n                              selectDrilldown([]);\n                            }}\n                          >\n                            {auth.currentUser && (\n                              <CardContent>\n                                <TextField\n                                  variant=\"outlined\"\n                                  multiline\n                                  rowsMax={3}\n                                  onPointerUp={(e) => {\n                                    e.stopPropagation();\n                                  }}\n                                  style={{ height: 80 }}\n                                  defaultValue={value.value}\n                                  onChange={(event) => {\n                                    drilldown[indexTop][index].goal =\n                                      event.target.value;\n                                    setDrilldown(drilldown);\n                                    editNode(drilldown[indexTop][index]);\n                                  }}\n                                ></TextField>\n\n                                <CardActions\n                                  style={{ justifyContent: \"center\" }}\n                                >\n                                  {selection[indexTop] === index && (\n                                    <IconButton\n                                      aria-label=\"delete\"\n                                      onPointerUp={(e) => {\n                                        e.stopPropagation();\n                                        const deleteMe =\n                                          drilldown[indexTop][index];\n                                        var newDrill = [];\n                                        for (const d in drilldown) {\n                                          const drill = parseInt(d);\n                                          if (drill < indexTop) {\n                                            newDrill.push(drilldown[drill]);\n                                          } else if (drill === indexTop) {\n                                            var newTier = [];\n                                            for (const tier of drilldown[\n                                              drill\n                                            ]) {\n                                              if (tier !== deleteMe) {\n                                                newTier.push(tier);\n                                              }\n                                            }\n                                            newDrill.push(newTier);\n                                          }\n                                        }\n                                        if (selection[indexTop] >= 1) {\n                                          selection[indexTop] -= 1;\n                                        }\n                                        const newSelect = selection;\n                                        setSelection(newSelect);\n                                        if (deleteMe.parent !== null) {\n                                          deleteMe.parent.removeChild(deleteMe);\n                                          selectDrilldown([]);\n                                        } else {\n                                          selectDrilldown(newDrill[0]);\n                                        }\n                                        setUpdate(!update);\n                                        deleteNode(deleteMe);\n                                      }}\n                                    >\n                                      <DeleteIcon />\n                                    </IconButton>\n                                  )}\n                                  <IconButton\n                                    aria-label=\"done\"\n                                    onPointerUp={(e) => {\n                                      e.stopPropagation();\n                                      value.done = !value.done;\n                                      editNode(value);\n                                      setUpdate(!update);\n                                    }}\n                                  >\n                                    {value.done && (\n                                      <CheckCircleIcon\n                                        style={{ color: \"green\" }}\n                                      />\n                                    )}\n                                    {!value.done && <CheckCircleOutlineIcon />}\n                                  </IconButton>\n                                  {selection[indexTop] === index && (\n                                    <IconButton\n                                      aria-label=\"sub-goal\"\n                                      onPointerUp={(e) => {\n                                        e.stopPropagation();\n                                        const newTree = new GoalTree(\n                                          uuidv4(),\n                                          \"New\",\n                                          false\n                                        );\n                                        if (\n                                          drilldown[indexTop][index].hasChild\n                                        ) {\n                                          const len =\n                                            drilldown[indexTop][index].children\n                                              .length;\n                                          drilldown[indexTop][\n                                            index\n                                          ].children = newTree;\n                                          drilldown[indexTop + 1][\n                                            len\n                                          ] = newTree;\n                                          setDrilldown(drilldown);\n                                          setUpdate(!update);\n                                        } else {\n                                          drilldown[indexTop][\n                                            index\n                                          ].children = newTree;\n                                          drilldown.push([newTree]);\n                                          setDrilldown(drilldown);\n                                          selection.push(0);\n                                          setSelection(selection);\n                                          setUpdate(!update);\n                                        }\n                                        uploadNode(newTree);\n                                      }}\n                                    >\n                                      <AddIcon />\n                                    </IconButton>\n                                  )}\n                                </CardActions>\n                              </CardContent>\n                            )}\n                            {auth.currentUser === null && (\n                              <CardContent>\n                                <Typography\n                                  color=\"textSecondary\"\n                                  style={{ height: 80, fontSize: 20 }}\n                                >\n                                  {value.value}\n                                </Typography>\n                                <IconButton aria-label=\"done\" disabled={true}>\n                                  {value.done && (\n                                    <CheckCircleIcon\n                                      style={{ color: \"green\" }}\n                                    />\n                                  )}\n                                  {!value.done && <CheckCircleOutlineIcon />}\n                                </IconButton>\n                              </CardContent>\n                            )}\n                          </Card>\n                        </Col>\n                      );\n                    } else {\n                      return null;\n                    }\n                  })}\n                </Row>\n              </Container>\n            );\n          })}\n\n        {selection.map((_, index) => {\n          return (\n            <CurvedArrow\n              key={index}\n              fromSelector={\".t\" + String(index)}\n              fromOffsetY={-70}\n              toSelector={\".t\" + String(index + 1)}\n              toOffsetY={70}\n              middleX={50}\n              zIndex=\"5\"\n              dynamicUpdate={true}\n            />\n          );\n        })}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}